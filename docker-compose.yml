version: '2.2'

services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${TEST_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${TEST_DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${TEST_DB_DATABASE}
    volumes:
      - ./db:/data/db
    ports:
      - 27017:27017
    networks:
      prerenderer:
        ipv4_address: 173.20.0.50
        ipv6_address: 2002:ac14:0:0:0:0:0:50

  apache:
    build:
      context: .
      dockerfile: docker/apache/2.4/apache.dockerfile
      args:
        TEST_SMART_APACHE_CONTAINER_HOST: ${TEST_SMART_APACHE_CONTAINER_HOST}
        TEST_DUMB_APACHE_CONTAINER_HOST: ${TEST_DUMB_APACHE_CONTAINER_HOST}
        TEST_PRERENDERER_NODEJS_SERVER_PORT: ${TEST_PRERENDERER_NODEJS_SERVER_PORT}
        TEST_STATIC_NODEJS_SERVER_PORT: ${TEST_STATIC_NODEJS_SERVER_PORT}
        TEST_APP_NODEJS_SERVER_PORT: ${TEST_APP_NODEJS_SERVER_PORT}
    volumes:
      - ./logs/apache:/usr/local/apache2/logs
    networks:
      prerenderer:
        ipv4_address: 173.20.0.100
        ipv6_address: 2002:ac14:0:0:0:0:0:100
    extra_hosts:
      - ${TEST_NODEJS_CONTAINER_HOST}:173.20.0.102
      - ${TEST_NODEJS_CONTAINER_HOST}:2002:ac14:0:0:0:0:0:102

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/nginx.dockerfile
      args:
        TEST_SMART_NGINX_CONTAINER_HOST: ${TEST_SMART_NGINX_CONTAINER_HOST}
        TEST_DUMB_NGINX_CONTAINER_HOST: ${TEST_DUMB_NGINX_CONTAINER_HOST}
        TEST_PRERENDERER_NODEJS_SERVER_PORT: ${TEST_PRERENDERER_NODEJS_SERVER_PORT}
        TEST_STATIC_NODEJS_SERVER_PORT: ${TEST_STATIC_NODEJS_SERVER_PORT}
        TEST_APP_NODEJS_SERVER_PORT: ${TEST_APP_NODEJS_SERVER_PORT}
    volumes:
      - ./logs/nginx:/var/log/nginx
    networks:
      prerenderer:
        ipv4_address: 173.20.0.101
        ipv6_address: 2002:ac14:0:0:0:0:0:101
    extra_hosts:
      - ${TEST_NODEJS_CONTAINER_HOST}:173.20.0.102
      - ${TEST_NODEJS_CONTAINER_HOST}:2002:ac14:0:0:0:0:0:102

  tests:
    depends_on:
      # - mongo
      - apache
      - nginx
    build:
      context: .
      dockerfile: docker/tests/tests-node-12.dockerfile
    extra_hosts:
      - ${TEST_DB_HOST}:173.20.0.50
      - ${TEST_SMART_APACHE_CONTAINER_HOST}:173.20.0.100
      - ${TEST_DUMB_APACHE_CONTAINER_HOST}:173.20.0.100
      - ${TEST_SMART_NGINX_CONTAINER_HOST}:173.20.0.101
      - ${TEST_DUMB_NGINX_CONTAINER_HOST}:173.20.0.101
      - ${TEST_NODEJS_CONTAINER_HOST}:127.0.0.1
      - ${TEST_SMART_NGINX_CONTAINER_HOST}:2002:ac14:0:0:0:0:0:101
      - ${TEST_DUMB_NGINX_CONTAINER_HOST}:2002:ac14:0:0:0:0:0:101
      - ${TEST_NODEJS_CONTAINER_HOST}:::1
    volumes:
      - ./logs/node:/var/www/logs
      - ./dist:/var/www/dist
      - ./src:/var/www/src
      - ./test:/var/www/test
    ports:
      - 9229:9229
    networks:
      prerenderer:
        ipv4_address: 173.20.0.102
        ipv6_address: 2002:ac14:0:0:0:0:0:102
    environment:
      - NODE_ENV
      - TEST_DB_HOST
      - TEST_DB_USERNAME
      - TEST_DB_PASSWORD
      - TEST_DB_DATABASE
      - TEST_SMART_APACHE_CONTAINER_HOST
      - TEST_DUMB_APACHE_CONTAINER_HOST
      - TEST_SMART_NGINX_CONTAINER_HOST
      - TEST_DUMB_NGINX_CONTAINER_HOST
      - TEST_NODEJS_CONTAINER_HOST
      - TEST_APP_NODEJS_SERVER_PORT
      - TEST_APP_NODEJS_SERVER_PORT_SECURE
      - TEST_STATIC_NODEJS_SERVER_PORT
      - TEST_PRERENDERER_NODEJS_SERVER_PORT
    command: npm run test:debug
    # command: node --inspect=0.0.0.0:9229 ./node_modules/mocha/bin/_mocha -- -w -t 8640000 --colors test/specs/unit/config/*.spec.js

networks:
  prerenderer:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 173.20.0.0/24
          gateway: 173.20.0.1
        - subnet: 2002:ac14:0000::/48
          gateway: 2002:ac14:0:0:0:0:0:1
