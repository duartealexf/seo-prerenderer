##
# Nginx HTTP server config.
#
# Look for ✅ to know what can be changed.
#
# ⚠️ The proxy_pass points to a running Prerenderer server.
# Use this combined with a running instance of it.
##



##
# Map that assigns $botTest to whether user agent is a bot.
##
map $http_user_agent $botTest {
	volatile;
	# ✅ Change the include path if you need to.
	include /etc/nginx/conf.d/maps/bots.map;
}

##
# Map that assigns $extensionTest to whether request should be prerendered.
##
map $uri $extensionTest {
	volatile;
	# ✅ Change the include path if you need to.
	include /etc/nginx/conf.d/maps/extensions.map;
}

##
# Map that tests the result of the other two maps and
# finally decides if $shouldPrerender is true or false.
##
map "$botTest:$extensionTest" $shouldPrerender {
	volatile;
	default 0;
	"yes:yes" 1;
}



##
# HTTP server block.
##
server {
	listen       80 default_server;
	listen       [::]:80 default_server;

	# ✅ Change these values accordingly.
	server_name  www.example.com example.com;
	root         /var/www/;
	index        index.html;

	include /etc/nginx/default.d/*.conf;

	##
	# ✅ Change this if you need. E.g. use...
	# location ~ ^/(?!(admin|assets)) { ... }
	# ...to not prerender /admin nor /assets.
	##
	location / {

		##
		# Set headers for Prerenderer. Do not change this.
		##
		proxy_set_header   X-Forwarded-For $remote_addr;
		proxy_set_header   X-Forwarded-Proto $scheme;
		proxy_set_header   X-Forwarded-Host $http_host;
		proxy_set_header   X-Forwarded-Port $server_port;

		if ($shouldPrerender = 1) {
		##
		# Make sure you point it to Prerenderer.
		# ✅ Change this if needed.
		##
		proxy_pass http://127.0.0.1:9000;
		}

		##
		# ✅ Change this if needed.
		##
		try_files $uri $uri/ index.html;
	}
}
